"using UnityEngine;\nusing UniRx;\nusing Cysharp.Threading.Tasks;\nusing System;\nusing DG.Tweening;\nusing TMPro;\n\npublic class GameOpening : MonoBehaviour\n{\n    [Header(\"References\")]\n    [SerializeField] private Transform _cameraTrans;\n    [SerializeField] private TMP_Text _countTxt;\n\n    private Vector3 _initialPos;\n    private Vector3 _initialRot;\n\n    private readonly Subject<Unit> _openingEnd = new();\n    public IObservable<Unit> OpeningEnd => _openingEnd;\n\n    private readonly Subject<Unit> _tileChange = new();\n    public IObservable<Unit> TileChange => _tileChange;\n\n    private readonly Subject<Unit> _goSignal = new();\n    public IObservable<Unit> GoSignal => _goSignal;\n\n    private void Start()\n    {\n        // 開始時の状態を保存\n        _initialPos = _cameraTrans.position;\n        _initialRot = _cameraTrans.localEulerAngles;\n\n        // 非同期演出開始\n        _ = RunOpeningAsync();\n    }\n\n    private async UniTask RunOpeningAsync()\n    {\n        await PlayOpeningIntroAsync();\n        PlayCountdownSequence();\n    }\n\n    /// <summary>\n    /// 演出前半（カメラの移動・回転）\n    /// </summary>\n    private async UniTask PlayOpeningIntroAsync()\n    {\n        await UniTask.Delay(TimeSpan.FromSeconds(0.3f));\n        _tileChange.OnNext(Unit.Default);\n\n        _cameraTrans.DOMoveX(3, 2.9f);\n        _cameraTrans.DOBlendableRotateBy(new Vector3(0, 40, 0), 2.9f);\n\n        await UniTask.Delay(TimeSpan.FromSeconds(3));\n        _countTxt.enabled = true;\n    }\n\n    /// <summary>\n    /// カウントダウン演出\n    /// </summary>\n    private void PlayCountdownSequence()\n    {\n        Sequence sequence = DOTween.Sequence();\n\n        AddCountdownStep(sequence, \"3\",\n            startPos: new Vector3(5, 3, 3),\n            startRot: new Vector3(0, 220, 0),\n            moveTarget: new Vector3(3.8f, 3, 4.5f));\n\n        AddCountdownStep(sequence, \"2\",\n            startPos: new Vector3(-2, 2, -6),\n            startRot: new Vector3(0, 40, 0),\n            moveTarget: new Vector3(-5, 2, -3));\n\n        AddCountdownStep(sequence, \"1\",\n            startPos: new Vector3(0, 2, 6),\n            startRot: new Vector3(0, 180, 0));\n\n        // GO!!\n        sequence.AppendCallback(() => SetText(\"GO!!\"));\n        sequence.AppendCallback(() => _goSignal.OnNext(Unit.Default));\n        sequence.AppendCallback(() => _countTxt.transform.localScale = Vector3.zero);\n        sequence.Append(_countTxt.transform.DOScale(1, 1).SetEase(Ease.OutElastic));\n        sequence.Join(_cameraTrans.DOMove(new Vector3(0, 21, 23), 1));\n        sequence.Join(_cameraTrans.DOLocalRotate(new Vector3(30, 180, 0), 1));\n\n        sequence.OnComplete(() =>\n        {\n            _countTxt.enabled = false;\n            _openingEnd.OnNext(Unit.Default);\n        });\n\n        sequence.Play();\n    }\n\n    /// <summary>\n    /// カウントダウンの1ステップを追加\n    /// </summary>\n    private void AddCountdownStep(Sequence seq, string text, Vector3 startPos, Vector3 startRot, Vector3? moveTarget = null)\n    {\n        seq.AppendCallback(() =>\n        {\n            SetText(text);\n            SetCameraStart(startPos, startRot);\n        });\n\n        seq.Append(_countTxt.transform.DOScale(1, 1).SetEase(Ease.OutElastic));\n\n        if (moveTarget.HasValue)\n        {\n            seq.Join(_cameraTrans.DOMove(moveTarget.Value, 1));\n        }\n    }\n\n    private void SetCameraStart(Vector3 pos, Vector3 rot)\n    {\n        _countTxt.transform.localScale = Vector3.zero;\n        _cameraTrans.position = pos;\n        _cameraTrans.localEulerAngles = rot;\n    }\n\n    private void SetText(string txt) => _countTxt.text = txt;\n\n    private void OnDestroy()\n    {\n        // カメラを初期状態に戻す\n        _cameraTrans.position = _initialPos;\n        _cameraTrans.localEulerAngles = _initialRot;\n    }\n}\n"
