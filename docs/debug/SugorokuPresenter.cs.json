"using System;\nusing System.Collections.Generic;\nusing UnityEngine;\nusing UnityEngine.UI;\nusing Cysharp.Threading.Tasks;\nusing DG.Tweening;\nusing UniRx;\n\nnamespace Sugoroku\n{\n  public class SugorokuPresenter : MonoBehaviour\n  {\n    [SerializeField] private SugorokuModel _sugorokuModel;\n    [SerializeField] private TileManager _tileManager;\n    [SerializeField] private SugorokuAnime _sugorokuAnime;\n    [SerializeField] private RollingDice _rollingDice;\n    [SerializeField] private PieceMoving _pieceMoving;\n    [SerializeField] private CameraWorking _cameraWorking;\n    [SerializeField] private GameOpening _gameOpening;\n\n    void Start()\n    {\n      //スタート演出でのタイル更新\n      _gameOpening.TileChange.Subscribe(_ =>\n      {\n        Debug.Log(\"enter1\");\n        _tileManager.UpdateTiles();\n      }).AddTo(this);\n\n      //発進合図\n      _gameOpening.GoSignal.Subscribe(async _ =>\n      {\n        Debug.Log(\"enter2\");\n        _tileManager.RoadMoving(true);\n        await _sugorokuAnime.StartAnimation();\n      }).AddTo(this);\n\n      //ゲームのスタート演出終了合図\n      _gameOpening.OpeningEnd.Subscribe(_ =>\n      {\n        Debug.Log(\"enter3\");\n        // _cameraWorking.StartStandbyCameraLoop();\n        _cameraWorking.BeginningWork();\n      }).AddTo(this);\n\n\n      //サイコロを振り始める\n      _rollingDice.StartDiceRoll.Subscribe(_ =>\n      {\n        Debug.Log(\"enter4\");\n        _sugorokuModel.PieceTileIndex = _pieceMoving.CurrentTileIndex;\n        _cameraWorking.BeginDiceRollEvent(_sugorokuModel.PieceTileIndex);\n      }).AddTo(this);\n\n      //Pieceの動き終了\n      _pieceMoving.IsPieceMove.Skip(1).Subscribe(value =>\n      {\n        Debug.Log(\"enter5\");\n        if (!value)\n        {\n          _cameraWorking.EndDiceRollEvent();\n        }\n      }).AddTo(this);\n\n      //サイコロの目を取得\n      _rollingDice.DiceResult.Subscribe(number =>\n      {\n        Debug.Log(\"enter6\");\n        _sugorokuModel.DiceValue = number;\n        _sugorokuModel.DiceTotal += _sugorokuModel.DiceValue;\n\n        _pieceMoving.ProceedPiece(_sugorokuModel.DiceValue);\n      }).AddTo(this);\n\n      //コマ位置での、中心床のマテリアル変化合図\n      _pieceMoving.RoadChange.Subscribe(value =>\n      {\n        Debug.Log(\"enter7\");\n        _tileManager.ChangeRoadVisual(value.Item1, value.Item2);\n        _cameraWorking.MoveToPiecePosition(value.Item2);\n      }).AddTo(this);\n\n      //次に進むTileを取得\n      _pieceMoving.GetTile.Subscribe(_ =>\n      {\n        Debug.Log(\"enter8\");\n        _pieceMoving.Tiles = _tileManager.Tiles;\n      }).AddTo(this);\n\n    }\n  }\n\n}\n"
