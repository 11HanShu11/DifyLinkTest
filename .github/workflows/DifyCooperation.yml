name: Generate C# Class Diagrams

on:
  push:
    paths:
      - "**.cs"
      - "docs/ClassDiagrams.md"
  pull_request:
    paths:
      - "**.cs"
      - "docs/ClassDiagrams.md"

jobs:
  generate-diagram:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      issues: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Generate class diagrams with Dify (Smart Mode)
        id: generate_diagram
        env:
          DIFY_API_KEY: ${{ secrets.DIFY_API_KEY }}
          DIFY_WORKFLOW_ID: ${{ secrets.DIFY_WORKFLOW_ID }}
        run: |
          mkdir -p docs/debug

          # C#„Éï„Ç°„Ç§„É´ÂèéÈõÜ
          if [ ! -f docs/ClassDiagrams.md ]; then
            echo "ClassDiagrams.md„ÅåÂ≠òÂú®„Åó„Å™„ÅÑ„ÅÆ„ÅßÂÖ®.cs„Éï„Ç°„Ç§„É´„ÇíÈÄÅ‰ø°„Åó„Åæ„Åô"
            TARGET_CS=$(find . -name "*.cs" -type f)
            EXISTING_MD=""
          else
            echo "ClassDiagrams.md„ÅåÂ≠òÂú®„Åô„Çã„ÅÆ„ÅßÂ∑ÆÂàÜ„ÅÆ„ÅøÈÄÅ‰ø°„Åó„Åæ„Åô"
            CHANGED_CS=$(git diff --name-only origin/main...HEAD | grep '\.cs$' || true)
            TARGET_CS="$CHANGED_CS"
            EXISTING_MD="docs/ClassDiagrams.md"
          fi

          # C#„Ç≥„Éº„ÉâÈÄ£Áµê
          CS_CODE=""
          for file in $TARGET_CS; do
            if [ ! -f "$file" ]; then continue; fi
            CONTENT=$(cat "$file")
            CS_CODE="${CS_CODE}\n${CONTENT}\n"
          done

          # base64 encode for md file
          if [ -n "$EXISTING_MD" ]; then
            MD_BASE64=$(base64 -w 0 "$EXISTING_MD")
            MD_JSON="\"ClassDiagramsMd\": {\"type\": \"file\", \"name\": \"ClassDiagrams.md\", \"content\": \"$MD_BASE64\"},"
          else
            MD_JSON=""
          fi

          # JSON payload assemble
          JSON_PAYLOAD=$(cat <<EOF
          {
            "workflow_id": "${DIFY_WORKFLOW_ID}",
            "inputs": {
              "csharp_code": $(jq -Rs . <<<"$CS_CODE"),
              ${MD_JSON}
              "dummy": null
            },
            "response_mode": "blocking",
            "user": "github-actions-bot"
          }
          EOF
          )

          # Remove trailing comma+dummy for clean JSON
          JSON_PAYLOAD=$(echo "$JSON_PAYLOAD" | sed 's/,"dummy": null//;s/"dummy": null//')

          # „Éá„Éê„ÉÉ„Ç∞Áî®‰øùÂ≠ò
          echo "$JSON_PAYLOAD" > docs/debug/dify_api_payload.json

          RESPONSE=$(curl -s -X POST "https://api.dify.ai/v1/workflows/run" \
            --header "Authorization: Bearer ${DIFY_API_KEY}" \
            --header "Content-Type: application/json" \
            --data-raw "$JSON_PAYLOAD")

          echo "API Response:"
          echo "$RESPONSE" | jq . || echo "$RESPONSE"
          echo "$RESPONSE" > docs/debug/dify_response.json

          # MermaidÂõ≥„ÇíÂèñÂæó
          MERMAID_RESULT=$(echo "$RESPONSE" | jq -r '.data.outputs.mermaid_diagram // .data.outputs.class_diagram // .data.outputs.result' 2>/dev/null || echo "")

          # ÁµêÊûú„Çí„Éû„Éº„ÇØ„ÉÄ„Ç¶„É≥„Å´Â§âÊèõ
          echo "## ü§ñ AI Generated C# Class Diagrams" > docs/ClassDiagrams.md
          echo "" >> docs/ClassDiagrams.md
          if [ -z "$EXISTING_MD" ]; then
            echo "*Generated from all C# files in the repository*" >> docs/ClassDiagrams.md
          else
            echo "*Generated from changes and existing class diagram*" >> docs/ClassDiagrams.md
          fi
          echo "" >> docs/ClassDiagrams.md

          if [ -n "$MERMAID_RESULT" ] && [ "$MERMAID_RESULT" != "null" ] && [ "$MERMAID_RESULT" != "" ]; then
            echo "<details><summary>üìä Complete Class Diagram</summary>" >> docs/ClassDiagrams.md
            echo "" >> docs/ClassDiagrams.md
            if echo "$MERMAID_RESULT" | grep -q '```mermaid'; then
              echo "$MERMAID_RESULT" >> docs/ClassDiagrams.md
            else
              echo '```mermaid' >> docs/ClassDiagrams.md
              echo "$MERMAID_RESULT" >> docs/ClassDiagrams.md
              echo '```' >> docs/ClassDiagrams.md
            fi
            echo "" >> docs/ClassDiagrams.md
            echo "</details>" >> docs/ClassDiagrams.md
          else
            ERROR_MSG=$(echo "$RESPONSE" | jq -r '.error.message // "Unknown error"' 2>/dev/null || echo "Failed to parse response")
            echo "‚ùå **Failed to generate class diagram**" >> docs/ClassDiagrams.md
            echo "" >> docs/ClassDiagrams.md
            echo "Error: $ERROR_MSG" >> docs/ClassDiagrams.md
          fi

          # Âá¶ÁêÜ„Åó„Åü„Éï„Ç°„Ç§„É´‰∏ÄË¶ß„ÇíËøΩÂä†
          echo "" >> docs/ClassDiagrams.md
          echo "### üìÅ Processed Files" >> docs/ClassDiagrams.md
          echo "" >> docs/ClassDiagrams.md
          for file in $TARGET_CS; do
            if [ -f "$file" ]; then
              echo "- \`$file\`" >> docs/ClassDiagrams.md
            fi
          done

      - name: Commit & push updated class diagram
        run: |
          git config user.name "github-actions-bot"
          git config user.email "github-actions-bot@users.noreply.github.com"
          git config pull.rebase false

          if git diff --quiet docs/ClassDiagrams.md; then
            echo "No changes to commit"
            exit 0
          fi

          git add docs/ClassDiagrams.md
          if [ -d docs/debug ]; then
            git add docs/debug/
          fi

          git commit -m "Update C# class diagrams [skip ci]" || {
            echo "No changes to commit"
            exit 0
          }

          for i in {1..3}; do
            if git push origin HEAD:main; then
              echo "‚úÖ Push successful"
              break
            else
              echo "‚ùå Push failed, attempt $i of 3"
              if [ $i -lt 3 ]; then
                echo "Fetching latest changes..."
                git fetch origin
                git pull origin main --no-rebase || {
                  echo "Resolving conflicts (ours for all unmerged files)..."
                  for f in $(git diff --name-only --diff-filter=U); do
                    git checkout --ours -- "$f"
                    git add "$f"
                  done
                  git commit -m "Resolve conflicts - keep generated diagrams [skip ci]" || true
                }
                sleep 2
              else
                echo "‚ùå Push failed after 3 attempts"
                exit 1
              fi
            fi
          done